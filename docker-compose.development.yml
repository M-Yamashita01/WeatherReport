version: '3.7'

x-web-container: &web-container
  environment:
    DB_USERNAME: mysql_user
    DB_PASSWORD: mysql_user
    DB_HOSTNAME: db_latest    
    RAILS_SERVE_STATIC_FILES: 'true'
    OPENWEATHERMAP_API_KEY:
    MYSQL_DATABASE: weather_report_development

services:
  db_latest:
    build:
      context: ./database
      args:
        env_database: development
      dockerfile: Dockerfile.db
    volumes:
      - ./data/db:/var/lib/mysql
    ports:
      - "3306:3306"

  # db migration after mysql startup
  db-migrate_latest:
    << : *web-container
    build: 
      context: ./backend
      args:
        rails_env: development
      dockerfile: Dockerfile.migration
    depends_on:
      - db_latest
    ports:
      - "3307:3307"
    tty: true

  db-openweathermap:
    << : *web-container
    build:
      context: ./weatherupdator
      dockerfile: Dockerfile.openWeatherMap
    depends_on: 
      - db-migrate_latest
    command: sh -c "./wait-for-it.sh -t 60 -h db_latest -p 3306 && ruby current_weather_insert.rb"

  server_latest:
    << : *web-container
    build:
      context: ./backend
      args:
        rails_env: development
      dockerfile: Dockerfile.server
    ports:
      - '3000:3000'
    volumes:
      - ./backend/app/javascript:/weather_report/app/javascript
      - ./backend/app/controllers:/weather_report/app/controllers
      - ./backend/app/models:/weather_report/app/models
      - ./backend/app/views:/weather_report/app/views
    depends_on:
      - db-migrate_latest

  client_latest:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.frontend
    environment:
      - HOST_NAME=server_latest
    ports:
      - '8080:80'
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/static:/app/static
      - ./frontend/public:/app/public
    depends_on:
      - server_latest
