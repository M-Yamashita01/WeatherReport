version: '3.7'

x-web-container: &web-container
  environment:
    TZ: 'Asia/Tokyo'
    MYSQL_PASS: mysql_user
    MYSQL_USER: mysql_user
    RAILS_SERVE_STATIC_FILES: 'true'
    DB_SERVICE_NAME: 'db'
    OPENWEATHERMAP_API_KEY:
    MYSQL_DATABASE: weather_report_development


services:
  db:
    image: mysql:5.7
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    environment:
      MYSQL_DATABASE: weather_report_development
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: mysql_user
      MYSQL_PASSWORD: mysql_user
    volumes:
      - ./data/db:/var/lib/mysql
    ports:
      - "3306:3306"

  # db migration after mysql startup
  db-migrate:
    << : *web-container
    build: .
    depends_on:
      - db
    command: './wait-for-it.sh -t 60 -h db -p 3306 -- bin/rails db:migrate RAILS_ENV=development'

  # insert weather/location data to db
  # db-seed:
  #  << : *web-container
  #  build:
  #    context: .
  #    dockerfile: Dockerfile.seed
  #  depends_on:
  #    - db-migrate

  db-openweathermap:
    << : *web-container
    build:
      context: .
      dockerfile: Dockerfile.openWeatherMap
    depends_on: 
      - db-migrate

  server:
    << : *web-container
    build: .
    command: sh -c "rm -rf tmp && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - '3000:3000'
    volumes:
      - ./app/javascript:/weather_report/app/javascript
      - ./app/controllers:/weather_report/app/controllers
      - ./app/models:/weather_report/app/models
      - ./app/views:/weather_report/app/views
    depends_on:
      - db-migrate

  client:
    build: 
      context: .
      dockerfile: Dockerfile.frontend
    command: yarn run serve
    ports:
      - '8000:8000'
    depends_on:
      - server
